name: Update Location Data

on:
  issue_comment:
    types: [created]

jobs:
  update-location:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request == null }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq uuid-runtime

      - name: Extract data from comment
        id: extract
        run: |
          echo '${{ github.event.comment.body }}' > comment.json
          if ! jq -e . >/dev/null 2>&1 < comment.json; then
            echo "Invalid JSON in comment body."
            exit 1
          fi
          # Extract fields directly from the comment JSON
          DOG_ID=$(jq -r '.dogId' comment.json 2>/dev/null || echo "682774024ca6684a976c5f8e")
          DEVICE_NAME=$(jq -r '.deviceName' comment.json 2>/dev/null || echo "Tasker Device")
          LAT=$(jq -r '.latitude' comment.json 2>/dev/null || echo "null")
          LON=$(jq -r '.longitude' comment.json 2>/dev/null || echo "null")
          TIMESTAMP=$(jq -r '.timestamp' comment.json 2>/dev/null || echo "null")
          ACTIVE=$(jq -r '.active' comment.json 2>/dev/null || echo "true")
          if [[ "$LAT" == "null" || "$LON" == "null" || "$TIMESTAMP" == "null" ]]; then
            echo "Latitude, Longitude, or Timestamp not found in the comment."
            exit 1
          fi
          echo "DOG_ID=$DOG_ID" >> $GITHUB_ENV
          echo "DEVICE_NAME=$DEVICE_NAME" >> $GITHUB_ENV
          echo "LAT=$LAT" >> $GITHUB_ENV
          echo "LON=$LON" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "ACTIVE=$ACTIVE" >> $GITHUB_ENV

      - name: Update locations.json
        run: |
          TIMESTAMP_DATE=$(date -d @$((TIMESTAMP)) +%Y-%m-%dT%H:%M:%SZ 2>/dev/null || date -u +%Y-%m-%dT%H:%M:%SZ)
          UUID=$(uuidgen 2>/dev/null || echo "$(date +%s%N)")
          NEW_LOCATION='{"_id": "'"$UUID"'", "dogId": "'"$DOG_ID"'", "deviceName": "'"$DEVICE_NAME"'", "latitude": '$LAT', "longitude": '$LON', "timestamp": "'"$TIMESTAMP_DATE"'", "active": '$ACTIVE'}'
          mkdir -p data
          if [ -f "data/locations.json" ]; then
            LOCATIONS=$(cat data/locations.json 2>/dev/null || echo '[]')
            if [ -z "$LOCATIONS" ] || ! echo "$LOCATIONS" | jq -e . >/dev/null 2>&1; then
              LOCATIONS='[]'
            fi
            UPDATED_LOCATIONS=$(echo "$LOCATIONS" | jq -c '. += ['"$NEW_LOCATION"']' 2>/dev/null || echo '[]')
          else
            UPDATED_LOCATIONS='['"$NEW_LOCATION"']'
          fi
          # Pretty-print the JSON with 2-space indentation
          echo "$UPDATED_LOCATIONS" | jq --indent 2 > data/locations.json
          echo "Location data updated successfully."

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add -f data/locations.json
          git diff --cached --quiet || git commit -m "Update location to lat: $LAT, lon: $LON, timestamp: $TIMESTAMP"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
